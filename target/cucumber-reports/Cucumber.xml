<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="Cucumber" time="0.994" tests="16" skipped="0" failures="9" errors="0">
<testcase classname="Object types Test Roomba cleaning API for Platform Science" name="Unexpected object type in roomba position is sent in body, error response code expected" time="0.451">
<system-out><![CDATA[
Given Roomba is in position "s","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Object types Test Roomba cleaning API for Platform Science" name="Unexpected object type in room size is sent in body, error response code expected" time="0.022">
<system-out><![CDATA[
Given Roomba is in position "0","2".........................................passed
And Room size is "5" by "p".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Object types Test Roomba cleaning API for Platform Science" name="Unexpected object type in patches positions is sent in body, error response code expected" time="0.024">
<system-out><![CDATA[
Given Roomba is in position "0","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Object types Test Roomba cleaning API for Platform Science" name="Wrong direction is sent in body, error response code expected" time="0.018">
<system-out><![CDATA[
Given Roomba is in position "0","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Out of boundaries Test Roomba cleaning API for Platform Science" name="Dirt patches are placed outside room boundaries" time="0.025">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;8&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<8>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/OutOfBoundaries.feature:26)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "1","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "1","3"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Out of boundaries Test Roomba cleaning API for Platform Science" name="Room size is set to 0 by 0 dimensions and sends error response code" time="0.013">
<system-out><![CDATA[
Given Roomba is in position "5","2".........................................passed
And Room size is "0" by "0".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Out of boundaries Test Roomba cleaning API for Platform Science" name="Roomba is positioned outside room boundaries and sends error response code" time="0.013">
<system-out><![CDATA[
Given Roomba is in position "5","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................passed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba hoovers over one patch twice and returns one patch cleaned" time="0.013">
<failure type="java.lang.AssertionError" message="expected:&lt;1&gt; but was:&lt;8&gt;">
<![CDATA[java.lang.AssertionError: expected:<1> but was:<8>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 1 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:26)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "1","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "1","3"...........................................passed
And Roomba cleaned 1 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba starts in position where dirt patch is located" time="0.01">
<failure type="java.lang.AssertionError" message="expected:&lt;1&gt; but was:&lt;2&gt;">
<![CDATA[java.lang.AssertionError: expected:<1> but was:<2>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 1 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:40)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "1","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "1","4"...........................................passed
And Roomba cleaned 1 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="No dirt patches are placed" time="0.018">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;8&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<8>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:62)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "1","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "1","3"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Missing parameters in request body" time="0.01">
<failure type="java.lang.AssertionError">
<![CDATA[java.lang.AssertionError
	at org.junit.Assert.fail(Assert.java:87)
	at org.junit.Assert.assertTrue(Assert.java:42)
	at org.junit.Assert.assertTrue(Assert.java:53)
	at org.example.steps.TestSteps.checkResponseCode(TestSteps.java:101)
	at ✽.Response has "error" code(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:74)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "",""...........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "error" code..............................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba hoovers over same position twice" time="0.009">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;8&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<8>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:97)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "1","2".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "2","3"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba hoovers over same position twice" time="0.009">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;6&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<6>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:117)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "2","4".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "1","4"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba hoovers over same two positions twice" time="0.015">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;6&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<6>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:138)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "2","4".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "0","4"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Roomba runs to a wall" time="0.016">
<failure type="java.lang.AssertionError" message="expected:&lt;0&gt; but was:&lt;1&gt;">
<![CDATA[java.lang.AssertionError: expected:<0> but was:<1>
	at org.junit.Assert.fail(Assert.java:89)
	at org.junit.Assert.failNotEquals(Assert.java:835)
	at org.junit.Assert.assertEquals(Assert.java:647)
	at org.junit.Assert.assertEquals(Assert.java:633)
	at org.example.steps.TestSteps.checkPatchesCleaned(TestSteps.java:107)
	at ✽.Roomba cleaned 0 patches(file:///Users/lennyesquivel/IdeaProjects/pltsci/src/test/java/org/example/features/SimpleTests.feature:157)
]]>
</failure>
<system-out><![CDATA[
Given Roomba is in position "2","4".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "2","4"...........................................passed
And Roomba cleaned 0 patches................................................failed
]]></system-out>
</testcase>
<testcase classname="Test Roomba cleaning API for Platform Science" name="Room is filled with dirt patches and roomba goes through some several times" time="0.012">
<system-out><![CDATA[
Given Roomba is in position "0","0".........................................passed
And Room size is "5" by "5".................................................passed
When Room has dirt patches in positions.....................................passed
And Roomba follows the directions...........................................passed
When Request is sent........................................................passed
Then Response has "successful" code.........................................passed
And Roomba is in position "0","1"...........................................passed
And Roomba cleaned 8 patches................................................passed
]]></system-out>
</testcase>
</testsuite>
